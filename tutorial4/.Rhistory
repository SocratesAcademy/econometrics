# 2SLS to adjust for compliance
twosls <- feols(outcome ~ 1 | treatment ~ assignment, df)
set.seed(2000)
df <- tibble(assignment = sample(c(TRUE, FALSE), 1000, replace = TRUE),
# Randomly reassign 20% of people not based on treatment at all
treatment = case_when(
assignment ~ sample(c(TRUE,FALSE), 1000, prob = c(0.8,0.2), replace = TRUE),
TRUE ~ sample(c(TRUE,FALSE),1000, replace = TRUE)),
# True effect is 2
outcome = 2*treatment + 3*rnorm(1000))
# The true effect is 2
# Intent-to-treat
itt <- lm(outcome ~ treatment, df)
# 2SLS to adjust for compliance
twosls <- feols(outcome ~ 1 | treatment ~ assignment, df)
set.seed(2000)
df <- tibble(assignment = sample(c(TRUE, FALSE), 1000, replace = TRUE),
# Randomly reassign 20% of people not based on treatment at all
treatment = case_when(
sample(c(TRUE,FALSE), 1000, prob = c(0.8,0.2), replace = TRUE) ~ assignment,
sample(c(TRUE,FALSE),1000, replace = TRUE) ~ TRUE),
# True effect is 2
outcome = 2*treatment + 3*rnorm(1000))
# The true effect is 2
# Intent-to-treat
itt <- lm(outcome ~ treatment, df)
# 2SLS to adjust for compliance
twosls <- feols(outcome ~ 1 | treatment ~ assignment, df)
set.seed(2000)
df <- tibble(assignment = sample(c(TRUE, FALSE), 1000, replace = TRUE),
# Randomly reassign 20% of people not based on treatment at all
treatment = case_when(
assignment ~ sample(c(TRUE,FALSE), 1000, replace = TRUE, prob = c(0.8,0.2)),
TRUE       ~ sample(c(TRUE,FALSE), 1000, replace = TRUE)),
# True effect is 2
outcome = 2*treatment + 3*rnorm(1000))
# The true effect is 2
# Intent-to-treat
itt <- lm(outcome ~ treatment, df)
# 2SLS to adjust for compliance
twosls <- feols(outcome ~ 1 | treatment ~ assignment, df)
set.seed(2000)
df <- tibble(Z = sample(c(TRUE, FALSE), 1000, replace = TRUE),
# Randomly reassign 20% of people not based on treatment at all
D = case_when(
Z    ~ sample(c(TRUE, FALSE), 1000, replace = TRUE, prob = c(0.8,0.2)),
TRUE ~ sample(c(TRUE, FALSE), 1000, replace = TRUE)),
# True effect is 2
Y = 2*D + 3*rnorm(1000))
# The true effect is 2
# Intent-to-treat
itt <- lm(Y ~ D, df)
# The true effect is 2
# Intent-to-treat
itt <- lm(Y ~ D, df)
# 2SLS to adjust for compliance
twosls <- feols(Y ~ 1 | D ~ Z, df)
msummary(list(itt, twosls), stars = TRUE, gof_omit = '^(?!Num)')
set.seed(2000)
df <- tibble(Z = sample(c(TRUE, FALSE), 1000, replace = TRUE),
# Randomly reassign 20% of people not based on treatment at all
D = case_when(
Z    ~ sample(c(TRUE, FALSE), 1000, replace = TRUE, prob = c(0.8,0.2)),
TRUE ~ sample(c(TRUE, FALSE), 1000, replace = TRUE)),
# True effect is 2
Y = 2*D + 3*rnorm(1000))
# The true effect is 2
# Intent-to-treat
itt <- lm(Y ~ D, df)
# 2SLS to adjust for compliance
twosls <- feols(Y ~ 1 | D ~ Z, df)
msummary(list(itt, twosls), stars = TRUE, gof_omit = '^(?!Num)')
df <- tibble(assignment = sample(c(TRUE, FALSE), 1000, replace = TRUE),
# Randomly reassign 20% of people not based on treatment at all
treatment = case_when(
assignment ~ sample(c(TRUE,FALSE), 1000, replace = TRUE, prob = c(0.8,0.2)),
TRUE       ~ sample(c(TRUE,FALSE), 1000, replace = TRUE)),
# True effect is 2
outcome = 2*treatment + 3*rnorm(1000))
# The true effect is 2
# Intent-to-treat
itt <- lm(outcome ~ treatment, df)
# 2SLS to adjust for compliance
twosls <- feols(outcome ~ 1 | treatment ~ assignment, df)
set.seed(2000)
df <- tibble(assignment = sample(c(TRUE, FALSE), 1000, replace = TRUE),
# Randomly reassign 20% of people not based on treatment at all
treatment = case_when(
assignment ~ sample(c(TRUE,FALSE), 1000, replace = TRUE, prob = c(0.8,0.2)),
TRUE       ~ sample(c(TRUE,FALSE), 1000, replace = TRUE)),
# True effect is 2
outcome = 2*treatment + 3*rnorm(1000))
# The true effect is 2
# Intent-to-treat
itt <- lm(outcome ~ treatment, df)
# 2SLS to adjust for compliance
twosls <- feols(outcome ~ 1 | treatment ~ assignment, df)
msummary(list(itt, twosls), stars = TRUE, gof_omit = '^(?!Num)')
set.seed(2000)
df <- tibble(assignment = sample(c(TRUE, FALSE), 1000, replace = TRUE),
# Randomly reassign 20% of people not based on treatment at all
treatment = case_when(
assignment ~ sample(c(TRUE,FALSE), 1000, prob = c(0.8,0.2), replace = TRUE),
TRUE       ~ sample(c(TRUE,FALSE), 1000, replace = TRUE)),
# True effect is 2
outcome = 2*treatment + 3*rnorm(1000))
# The true effect is 2
# Intent-to-treat
itt <- lm(outcome ~ treatment, df)
msummary(list(itt, twosls), stars = TRUE, gof_omit = '^(?!Num)')
set.seed(2000)
df <- tibble(assignment = sample(c(TRUE, FALSE), 1000, replace = TRUE),
# Randomly reassign 20% of people not based on treatment at all
treatment = case_when(
sample(c(TRUE,FALSE), 1000, prob = c(0.8,0.2), replace = TRUE) ~ assignment,
TRUE       ~ sample(c(TRUE,FALSE), 1000, replace = TRUE)),
# True effect is 2
outcome = 2*treatment + 3*rnorm(1000))
# The true effect is 2
# Intent-to-treat
itt <- lm(outcome ~ treatment, df)
# 2SLS to adjust for compliance
twosls <- feols(outcome ~ 1 | treatment ~ assignment, df)
msummary(list(itt, twosls), stars = TRUE, gof_omit = '^(?!Num)')
set.seed(2000)
df <- tibble(Z = sample(c(TRUE, FALSE), 1000, replace = TRUE),
# Randomly reassign 20% of people not based on treatment at all
D = case_when(
sample(c(TRUE, FALSE), 1000, replace = TRUE, prob = c(0.8,0.2)) ~ Z,
TRUE ~ sample(c(TRUE, FALSE), 1000, replace = TRUE)),
Y = 2*D + 3*rnorm(1000))
# The true effect is 2
# Intent-to-treat
itt <- lm(Y ~ D, df)
# 2SLS to adjust for compliance
twosls <- feols(Y ~ 1 | D ~ Z, df)
msummary(list(itt, twosls), stars = TRUE, gof_omit = '^(?!Num)')
# The true effect is 2
late <- df %>%
group_by(Z) %>%
summarize(D = mean(D),
Y = mean(Y))
assignment_effect <- late$Y[2] - late$Y[1]
treatment_increase <- late$D[2] - late$D[1]
assignment_effect/treatment_increase
treatment_increase <- (df %>%
filter(assignment) %>%
pull(treatment) %>%
mean()) -
(df %>%
filter(!assignment) %>%
pull(treatment) %>%
mean())
assignment_effect <- (df %>%
filter(assignment) %>%
pull(outcome) %>%
mean()) -
(df %>%
filter(!assignment) %>%
pull(outcome) %>%
mean())
assignment_effect/treatment_increase
# The true effect is 2
assignment_effect_reg <- lm(Y ~ D, df)
treatment_increase    <- lm(Y ~ Z, df)
late <- feols(Y ~ 1 | D ~ Z, df)
msummary(list(assignment_effect_reg, treatment_increase, late), stars = TRUE, gof_omit = '^(?!Num)')
treatment_increase    <- lm(D ~ Z, df)
# The true effect is 2
assignment_effect_reg <- lm(Y ~ D, df)
treatment_increase_reg    <- lm(D ~ Z, df)
df_late <- df %>%
group_by(Z) %>%
summarize(D = mean(D),
Y = mean(Y))
assignment_effect <- df_late$Y[2] - df_late$Y[1]
treatment_increase <- df_late$D[2] - df_late$D[1]
scaled <- assignment_effect/treatment_increase
# The true effect is 2
assignment_effect_reg  <- lm(Y ~ D, df)
treatment_increase_reg <- lm(D ~ Z, df)
late <- feols(Y ~ 1 | D ~ Z, df)
# The true effect is 2
assignment_effect_reg  <- lm(Y ~ D, df)
treatment_increase_reg <- lm(D ~ Z, df)
late <- feols(Y ~ 1 | D ~ Z, df)
c(assignment_effect, treatment_increase, scaled)
msummary(list(assignment_effect_reg, treatment_increase, late), stars = TRUE, gof_omit = '^(?!Num)')
msummary(list(assignment_effect_reg, treatment_increase_reg, late), stars = TRUE, gof_omit = '^(?!Num)')
# The true effect is 2
assignment_effect_reg  <- lm(Y ~ Z, df)
msummary(list(assignment_effect_reg, treatment_increase_reg, late), stars = TRUE, gof_omit = '^(?!Num)')
c(assignment_effect, treatment_increase, scaled)
# The true effect is 2
assignment_effect_reg  <- lm(Y ~ Z, df)
treatment_increase_reg <- lm(D ~ Z, df)
late <- feols(Y ~ 1 | D ~ Z, df)
set.seed(7)
df <- tibble(Z = sample(c(0, 1), 1000, replace=T),
D = Z,
Y = 5*D + rnorm(1000))
head(df)
#The true effect is 5
m <- lm(Y ~ Z, df)
msummary(m, stars = TRUE, gof_omit = '^(?!Num)')
set.seed(7)
set.seed(7)
df <- tibble(Z = sample(c(0, 1), 1000, replace=T),
# some people do not comply - 20% do the opposite
D = ifelse(runif(1000) > 0.8, 1 - Z, Z),
Y = 5*D + rnorm(1000))
```{r, echo = FALSE}
head(df)
#The true effect is 5
m <- lm(Y ~ Z, df)
msummary(m, stars = TRUE, gof_omit = '^(?!Num)')
#The true effect is 5
iv <- df %>%
group_by(Z) %>%
summarize(D = mean(D),
Y = mean(Y))
iv
# since our instrument is binary, we want the slope
(iv$Y[2] - iv$Y[1]) /
(iv$D[2]-iv$D[1])
set.seed(7)
df <- tibble(Z = sample(c(TRUE, FALSE), 1000, replace = TRUE),
# randomly reassign 20% of people not based on treatment at all
D = case_when(
sample(c(TRUE, FALSE), 1000, replace = TRUE, prob = c(0.8,0.2)) ~ Z,
TRUE ~ sample(c(TRUE, FALSE), 1000, replace = TRUE)),
Y = 2*D + 3*rnorm(1000))
# The true effect is 2
# Intent-to-treat
itt <- lm(Y ~ D, df)
# 2SLS to adjust for compliance
late <- feols(Y ~ 1 | D ~ Z, df)
msummary(list(itt, late), stars = TRUE, gof_omit = '^(?!Num)')
set.seed(777)
df <- tibble(Z = sample(c(TRUE, FALSE), 1000, replace = TRUE),
# randomly reassign 20% of people not based on treatment at all
D = case_when(
sample(c(TRUE, FALSE), 1000, replace = TRUE, prob = c(0.8,0.2)) ~ Z,
TRUE ~ sample(c(TRUE, FALSE), 1000, replace = TRUE)),
Y = 2*D + 3*rnorm(1000))
# The true effect is 2
# Intent-to-treat
itt <- lm(Y ~ D, df)
# 2SLS to adjust for compliance
late <- feols(Y ~ 1 | D ~ Z, df)
msummary(list(itt, late), stars = TRUE, gof_omit = '^(?!Num)')
set.seed(77)
df <- tibble(Z = sample(c(TRUE, FALSE), 1000, replace = TRUE),
# randomly reassign 20% of people not based on treatment at all
D = case_when(
sample(c(TRUE, FALSE), 1000, replace = TRUE, prob = c(0.8,0.2)) ~ Z,
TRUE ~ sample(c(TRUE, FALSE), 1000, replace = TRUE)),
Y = 2*D + 3*rnorm(1000))
# The true effect is 2
# Intent-to-treat
itt <- lm(Y ~ D, df)
# 2SLS to adjust for compliance
late <- feols(Y ~ 1 | D ~ Z, df)
msummary(list(itt, late), stars = TRUE, gof_omit = '^(?!Num)')
set.seed(7)
df <- tibble(Z = sample(c(TRUE, FALSE), 1000, replace = TRUE),
# randomly reassign 20% of people not based on treatment at all
D = case_when(
sample(c(TRUE, FALSE), 1000, replace = TRUE, prob = c(0.8,0.2)) ~ Z,
TRUE ~ sample(c(TRUE, FALSE), 1000, replace = TRUE)),
Y = 2*D + 3*rnorm(1000))
# The true effect is 2
# Intent-to-treat
itt <- lm(Y ~ D, df)
# 2SLS to adjust for compliance
late <- feols(Y ~ 1 | D ~ Z, df)
msummary(list(itt, late), stars = TRUE, gof_omit = '^(?!Num)')
set.seed(77)
df <- tibble(Z = sample(c(TRUE, FALSE), 1000, replace = TRUE),
# randomly reassign 20% of people not based on treatment at all
D = case_when(
sample(c(TRUE, FALSE), 1000, replace = TRUE, prob = c(0.8,0.2)) ~ Z,
TRUE ~ sample(c(TRUE, FALSE), 1000, replace = TRUE)),
Y = 2*D + 3*rnorm(1000))
set.seed(1)
df <- tibble(Z = sample(c(TRUE, FALSE), 1000, replace = TRUE),
# randomly reassign 20% of people not based on treatment at all
D = case_when(
sample(c(TRUE, FALSE), 1000, replace = TRUE, prob = c(0.8,0.2)) ~ Z,
TRUE ~ sample(c(TRUE, FALSE), 1000, replace = TRUE)),
Y = 2*D + 3*rnorm(1000))
# The true effect is 2
# Intent-to-treat
itt <- lm(Y ~ D, df)
msummary(list(itt, late), stars = TRUE, gof_omit = '^(?!Num)')
set.seed(77)
df <- tibble(Z = sample(c(0, 1), 1000, replace=T),
# some people do not comply - 20% do the opposite
D = ifelse(runif(1000) > 0.8, 1 - Z, Z),
Y = 5*D + rnorm(1000))
head(df)
#The true effect is 5
m <- lm(Y ~ Z, df)
msummary(m, stars = TRUE, gof_omit = '^(?!Num)')
set.seed(77)
df <- tibble(Z = sample(c(0, 1), 1000, replace=T),
D = Z,
Y = 5*D + rnorm(1000))
head(df)
tail(df)
set.seed(7)
df <- tibble(Z = sample(c(0, 1), 1000, replace=T),
D = Z,
Y = 5*D + rnorm(1000))
thead(df)
head(df)
set.seed(77)
df <- tibble(Z = sample(c(TRUE,FALSE), 1000, replace = TRUE),
# randomly reassign 20% of people not based on treatment at all
D = case_when(
sample(c(TRUE,FALSE), 1000, replace = TRUE, prob = c(0.8, 0.2)) ~ Z,
TRUE ~ sample(c(TRUE,FALSE), 1000, replace = TRUE)),
Y = 2*D + rnorm(1000))
# The true effect is 2
# Intent-to-treat
itt <- lm(Y ~ D, df)
# 2SLS to adjust for compliance
late <- feols(Y ~ 1 | D ~ Z, df)
msummary(list(itt, late), stars = TRUE, gof_omit = '^(?!Num)')
set.seed(7)
df <- tibble(Z = sample(c(0, 1), 1000, replace=T),
# some people do not comply - 20% do the opposite
D = ifelse(runif(1000) < 0.8, Z, 1 - Z),
Y = 5*D + rnorm(1000))
#The true effect is 5
m <- lm(Y ~ Z, df)
msummary(m, stars = TRUE, gof_omit = '^(?!Num)')
# The true effect is 2
# Intent-to-treat
itt <- lm(Y ~ D, df)
# 2SLS to adjust for compliance
late <- feols(Y ~ 1 | D ~ Z, df)
```{r, echo = FALSE}
# The true effect is 2
# Intent-to-treat
itt <- lm(Y ~ D, df)
# 2SLS to adjust for compliance
late <- feols(Y ~ 1 | D ~ Z, df)
msummary(list(itt, late), stars = TRUE, gof_omit = '^(?!Num)')
set.seed(77)
df <- tibble(Z = sample(c(0, 1), 1000, replace=T),
# some people do not comply - 20% do the opposite
D = ifelse(runif(1000) < 0.8, Z, 1 - Z),
Y = 5*D + rnorm(1000))
#The true effect is 5
m <- lm(Y ~ Z, df)
msummary(m, stars = TRUE, gof_omit = '^(?!Num)')
# The true effect is 2
# Intent-to-treat
itt <- lm(Y ~ D, df)
# 2SLS to adjust for compliance
late <- feols(Y ~ 1 | D ~ Z, df)
msummary(list(itt, late), stars = TRUE, gof_omit = '^(?!Num)')
set.seed(7)
df <- tibble(Z = sample(c(0, 1), 1000, replace=T),
# some people do not comply - 20% do the opposite
D = ifelse(runif(1000) < 0.8, Z, 1 - Z),
Y = 5*D + 3*rnorm(1000))
#The true effect is 5
m <- lm(Y ~ Z, df)
msummary(m, stars = TRUE, gof_omit = '^(?!Num)')
# The true effect is 2
# Intent-to-treat
itt <- lm(Y ~ D, df)
# 2SLS to adjust for compliance
late <- feols(Y ~ 1 | D ~ Z, df)
msummary(list(itt, late), stars = TRUE, gof_omit = '^(?!Num)')
set.seed(1)
df <- tibble(Z = sample(c(0, 1), 1000, replace=T),
# some people do not comply - 20% do the opposite
D = ifelse(runif(1000) < 0.8, Z, 1 - Z),
Y = 5*D + 3*rnorm(1000))
#The true effect is 5
m <- lm(Y ~ Z, df)
msummary(m, stars = TRUE, gof_omit = '^(?!Num)')
# The true effect is 2
# Intent-to-treat
itt <- lm(Y ~ D, df)
# 2SLS to adjust for compliance
late <- feols(Y ~ 1 | D ~ Z, df)
msummary(list(itt, late), stars = TRUE, gof_omit = '^(?!Num)')
set.seed(777)
df <- tibble(Z = sample(c(0, 1), 1000, replace=T),
# some people do not comply - 20% do the opposite
D = ifelse(runif(1000) < 0.8, Z, 1 - Z),
Y = 5*D + 3*rnorm(1000))
# The true effect is 2
# Intent-to-treat
itt <- lm(Y ~ D, df)
# 2SLS to adjust for compliance
late <- feols(Y ~ 1 | D ~ Z, df)
msummary(list(itt, late), stars = TRUE, gof_omit = '^(?!Num)')
set.seed(5)
df <- tibble(Z = sample(c(0, 1), 1000, replace=T),
# some people do not comply - 20% do the opposite
D = ifelse(runif(1000) < 0.8, Z, 1 - Z),
Y = 5*D + 3*rnorm(1000))
# The true effect is 2
# Intent-to-treat
itt <- lm(Y ~ D, df)
# 2SLS to adjust for compliance
late <- feols(Y ~ 1 | D ~ Z, df)
e
```{r, echo = FALSE}
msummary(list(itt, late), stars = TRUE, gof_omit = '^(?!Num)')
set.seed(555)
df <- tibble(Z = sample(c(0, 1), 1000, replace=T),
# some people do not comply - 20% do the opposite
D = ifelse(runif(1000) < 0.8, Z, 1 - Z),
Y = 5*D + 3*rnorm(1000))
# The true effect is 2
# Intent-to-treat
itt <- lm(Y ~ D, df)
# 2SLS to adjust for compliance
late <- feols(Y ~ 1 | D ~ Z, df)
msummary(list(itt, late), stars = TRUE, gof_omit = '^(?!Num)')
set.seed(1000)
df <- tibble(Z = sample(c(0, 1), 1000, replace=T),
# some people do not comply - 20% do the opposite
D = ifelse(runif(1000) < 0.8, Z, 1 - Z),
Y = 5*D + 3*rnorm(1000))
# The true effect is 2
# Intent-to-treat
itt <- lm(Y ~ D, df)
# 2SLS to adjust for compliance
late <- feols(Y ~ 1 | D ~ Z, df)
msummary(list(itt, late), stars = TRUE, gof_omit = '^(?!Num)')
set.seed(11)
df <- tibble(Z = sample(c(0, 1), 1000, replace=T),
# some people do not comply - 20% do the opposite
D = ifelse(runif(1000) < 0.8, Z, 1 - Z),
Y = 5*D + 3*rnorm(1000))
# The true effect is 5
# Intent-to-treat
itt <- lm(Y ~ D, df)
# 2SLS to adjust for compliance
late <- feols(Y ~ 1 | D ~ Z, df)
msummary(list(itt, late), stars = TRUE, gof_omit = '^(?!Num)')
set.seed(111)
df <- tibble(Z = sample(c(0, 1), 1000, replace=T),
# some people do not comply - 20% do the opposite
D = ifelse(runif(1000) < 0.8, Z, 1 - Z),
Y = 5*D + 3*rnorm(1000))
# The true effect is 5
# Intent-to-treat
itt <- lm(Y ~ D, df)
# 2SLS to adjust for compliance
late <- feols(Y ~ 1 | D ~ Z, df)
msummary(list(itt, late), stars = TRUE, gof_omit = '^(?!Num)')
set.seed(2000)
df <- tibble(Z = sample(c(0, 1), 1000, replace=T),
# some people do not comply - 20% do the opposite
D = ifelse(runif(1000) < 0.8, Z, 1 - Z),
Y = 5*D + 3*rnorm(1000))
# The true effect is 5
# Intent-to-treat
itt <- lm(Y ~ D, df)
# 2SLS to adjust for compliance
late <- feols(Y ~ 1 | D ~ Z, df)
msummary(list(itt, late), stars = TRUE, gof_omit = '^(?!Num)')
set.seed(2000)
df <- tibble(Z = sample(c(0, 1), 1000, replace=T),
# some people do not comply - 20% do the opposite
D = ifelse(runif(1000) < 0.8, Z, 1 - Z),
Y = 5*D + rnorm(1000))
# The true effect is 5
# Intent-to-treat
itt <- lm(Y ~ D, df)
# 2SLS to adjust for compliance
late <- feols(Y ~ 1 | D ~ Z, df)
# The true effect is 5
# Intent-to-treat
itt <- lm(Y ~ D, df)
# 2SLS to adjust for compliance
late <- feols(Y ~ 1 | D ~ Z, df)
msummary(list(itt, late), stars = TRUE, gof_omit = '^(?!Num)')
set.seed(222)
df <- tibble(Z = sample(c(0, 1), 1000, replace=T),
# some people do not comply - 20% do the opposite
D = ifelse(runif(1000) < 0.8, Z, 1 - Z),
Y = 5*D + rnorm(1000))
# The true effect is 5
# Intent-to-treat
itt <- lm(Y ~ D, df)
msummary(list(itt, late), stars = TRUE, gof_omit = '^(?!Num)')
# The true effect is 2
# Intent-to-treat
itt <- lm(Y ~ Z, df)
# 2SLS to adjust for compliance
late <- feols(Y ~ 1 | D ~ Z, df)
msummary(list(itt, late), stars = TRUE, gof_omit = '^(?!Num)')
# 2SLS to adjust for compliance
late <- feols(Y ~ 1 | D ~ Z, df)
# The true effect is 5
# Intent-to-treat
itt <- lm(Y ~ Z, df)
msummary(list(itt, late), stars = TRUE, gof_omit = '^(?!Num)')
pagedown::chrome_print("tutorial4.html", output="tutorial4.pdf")
pagedown::chrome_print("tutorial4.html", output="tutorial4.pdf")
pagedown::chrome_print("tutorial4.html", output="tutorial4.pdf")
pagedown::chrome_print("tutorial4.html", output="tutorial4.pdf")
pagedown::chrome_print("tutorial4.html", output="tutorial4.pdf")
