# Run the analysis
model <- feols(Y ~ D, df, se = 'hetero')
# Get the results
coef_results[i] <- coef(model)[2]
sig_results[i] <- tidy(model)$p.value[2] <= .05
}
mean(sig_results)
set.seed(777)
# create vectors to store your estimates
coef_results <- c()
sig_results <- c()
for (i in 1:500) {
# have to re-create the data every time or it will just be the same data
df <- tibble(D = runif(1000, 0, 1),
Y = 2*D + rnorm(1000, mean = 0, sd = 3))
# Run the analysis
model <- feols(Y ~ D, df, se = 'hetero')
# Get the results
coef_results[i] <- coef(model)[2]
sig_results[i] <- tidy(model)$p.value[2] <= .05
}
mean(sig_results)
set.seed(777)
# create vectors to store your estimates
coef_results <- c()
sig_results <- c()
for (i in 1:500) {
# have to re-create the data every time or it will just be the same data
df <- tibble(D = runif(1000, 0, 1),
Y = 0.7*D + rnorm(1000, mean = 0, sd = 3))
# Run the analysis
model <- feols(Y ~ D, df, se = 'hetero')
# Get the results
coef_results[i] <- coef(model)[2]
sig_results[i] <- tidy(model)$p.value[2] <= .05
}
mean(sig_results)
set.seed(777)
# create vectors to store your estimates
coef_results <- c()
sig_results <- c()
for (i in 1:500) {
# have to re-create the data every time or it will just be the same data
df <- tibble(D = runif(1000, 0, 1),
Y = 0.9*D + rnorm(1000, mean = 0, sd = 3))
# Run the analysis
model <- feols(Y ~ D, df, se = 'hetero')
# Get the results
coef_results[i] <- coef(model)[2]
sig_results[i] <- tidy(model)$p.value[2] <= .05
}
mean(sig_results)
results_tibble <- tibble(coef = coef_results, sig = sig_results)
ggplot(results_tibble, aes(x = coef)) +
geom_density() +
theme_minimal() +
labs(x = 'Coefficient', y = 'Density')
ggplot(results_tibble, aes(x = sig)) +
geom_bar() +
theme_minimal() +
labs(x = 'Coefficient', y = 'Count') +
scale_x_discrete(labels = c('Insignificant','Significant'))
my_power_function <- function(effect, sample_size) {
sig_results <- c()
for (i in 1:500) {
# Have to re-create the data EVERY TIME or it will just be the same data over and over
df <- tibble(D = runif(sample_size, 0, 1),
Y = effect*D + rnorm(sample_size, mean = 0, sd = 3))
# Run the analysis
model <- feols(Y ~ D, data = df, se = 'hetero')
# Get the results
sig_results[i] <- tidy(model)$p.value[2] <= .05
}
sig_results %>%
mean() %>%
return()
}
my_power_function(.9, 1000)
power_levels <- c()
effects_to_try <- c(.4, .8, 1.2, 1.6, 2)
for (i in 1:5) {
power_levels[i] <- my_power_function(effects_to_try[i], 1000)
}
for (i in 1:5) {
power_levels[i] <- my_power_function(effects_to_try[i], 1000)
}
power_results <- tibble(effect = effects_to_try,
power = power_levels)
power_results # Where do we cross 80%?
ggplot(power_results,
aes(x = effect, y = power)) +
geom_line(color = 'red', size = 1.5) +
# add a horizontal line at 80%
geom_hline(aes(yintercept = .8), linetype = 'dashed') +
theme_minimal() +
scale_y_continuous(labels = scales::percent) +
labs(x = 'Linear Effect Size', y = 'Power')
set.seed(777)
# create vectors to store your estimates
coef_results <- c()
set.seed(7)
# create vectors to store your estimates
coef_results <- c()
sig_results <- c()
for (i in 1:500) {
# have to re-create the data every time or it will just be the same data
df <- tibble(D = runif(1000, 0, 1),
Y = 0.7*D + rnorm(1000, mean = 0, sd = 3))
# Run the analysis
model <- feols(Y ~ D, df, se = 'hetero')
# Get the results
coef_results[i] <- coef(model)[2]
sig_results[i] <- tidy(model)$p.value[2] <= .05
}
mean(sig_results)
for (i in 1:500) {
# have to re-create the data every time or it will just be the same data
df <- tibble(D = runif(1000, 0, 1),
Y = 0.8*D + rnorm(1000, mean = 0, sd = 3))
# Run the analysis
model <- feols(Y ~ D, df, se = 'hetero')
# Get the results
coef_results[i] <- coef(model)[2]
sig_results[i] <- tidy(model)$p.value[2] <= .05
}
for (i in 1:500) {
# have to re-create the data every time or it will just be the same data
df <- tibble(D = runif(1000, 0, 1),
Y = 0.8*D + rnorm(1000, mean = 0, sd = 3))
# Run the analysis
model <- feols(Y ~ D, df, se = 'hetero')
# Get the results
coef_results[i] <- coef(model)[2]
sig_results[i] <- tidy(model)$p.value[2] <= .05
}
set.seed(7)
# create vectors to store your estimates
coef_results <- c()
mean(sig_results)
set.seed(7)
# create vectors to store your estimates
coef_results <- c()
sig_results <- c()
for (i in 1:500) {
# have to re-create the data every time or it will just be the same data
df <- tibble(D = runif(1000, 0, 1),
Y = 0.7*D + rnorm(1000, mean = 0, sd = 3))
# Run the analysis
model <- feols(Y ~ D, df, se = 'hetero')
# Get the results
coef_results[i] <- coef(model)[2]
sig_results[i] <- tidy(model)$p.value[2] <= .05
}
mean(sig_results)
results_tibble <- tibble(coef = coef_results, sig = sig_results)
ggplot(results_tibble, aes(x = coef)) +
geom_density() +
theme_minimal() +
labs(x = 'Coefficient', y = 'Density')
set.seed(777)
# create vectors to store your estimates
coef_results <- c()
sig_results <- c()
for (i in 1:500) {
# have to re-create the data every time or it will just be the same data
df <- tibble(D = runif(1000, 0, 1),
Y = 0.7*D + rnorm(1000, mean = 0, sd = 3))
# Run the analysis
model <- feols(Y ~ D, df, se = 'hetero')
# Get the results
coef_results[i] <- coef(model)[2]
sig_results[i] <- tidy(model)$p.value[2] <= .05
}
mean(sig_results)
results_tibble <- tibble(coef = coef_results, sig = sig_results)
ggplot(results_tibble, aes(x = coef)) +
geom_density() +
theme_minimal() +
labs(x = 'Coefficient', y = 'Density')
ggplot(results_tibble, aes(x = sig)) +
geom_bar() +
theme_minimal() +
labs(x = 'Coefficient', y = 'Count') +
scale_x_discrete(labels = c('Insignificant','Significant'))
set.seed(777)
# create vectors to store your estimates
coef_results <- c()
sig_results <- c()
for (i in 1:500) {
# have to re-create the data every time or it will just be the same data
df <- tibble(D = runif(1000, 0, 1),
Y = 0.7*D + rnorm(1000, mean = 0, sd = 2))
# Run the analysis
model <- feols(Y ~ D, df, se = 'hetero')
# Get the results
coef_results[i] <- coef(model)[2]
sig_results[i] <- tidy(model)$p.value[2] <= .05
}
mean(sig_results)
set.seed(7)
# create vectors to store your estimates
coef_results <- c()
for (i in 1:500) {
# have to re-create the data every time or it will just be the same data
df <- tibble(D = runif(1000, 0, 1),
Y = 0.7*D + rnorm(1000, mean = 0, sd = 2))
# Run the analysis
model <- feols(Y ~ D, df, se = 'hetero')
# Get the results
coef_results[i] <- coef(model)[2]
sig_results[i] <- tidy(model)$p.value[2] <= .05
}
mean(sig_results)
set.seed(7)
# create vectors to store your estimates
coef_results <- c()
sig_results <- c()
for (i in 1:500) {
# have to re-create the data every time or it will just be the same data
df <- tibble(D = runif(1000, 0, 1),
Y = 0.3*D + rnorm(1000, mean = 0, sd = 2))
# Run the analysis
model <- feols(Y ~ D, df, se = 'hetero')
# Get the results
coef_results[i] <- coef(model)[2]
sig_results[i] <- tidy(model)$p.value[2] <= .05
}
mean(sig_results)
set.seed(7)
# create vectors to store your estimates
coef_results <- c()
sig_results <- c()
for (i in 1:500) {
# have to re-create the data every time or it will just be the same data
df <- tibble(D = runif(1000, 0, 1),
Y = 0.5*D + rnorm(1000, mean = 0, sd = 2))
# Run the analysis
model <- feols(Y ~ D, df, se = 'hetero')
# Get the results
coef_results[i] <- coef(model)[2]
sig_results[i] <- tidy(model)$p.value[2] <= .05
}
mean(sig_results)
set.seed(7)
# create vectors to store your estimates
coef_results <- c()
sig_results <- c()
for (i in 1:500) {
# have to re-create the data every time or it will just be the same data
df <- tibble(D = runif(1000, 0, 1),
Y = 0.6*D + rnorm(1000, mean = 0, sd = 2))
# Run the analysis
model <- feols(Y ~ D, df, se = 'hetero')
# Get the results
coef_results[i] <- coef(model)[2]
sig_results[i] <- tidy(model)$p.value[2] <= .05
}
mean(sig_results)
b
results_tibble <- tibble(coef = coef_results, sig = sig_results)
ggplot(results_tibble, aes(x = coef)) +
geom_density() +
theme_minimal() +
labs(x = 'Coefficient', y = 'Density')
set.seed(777)
# create vectors to store your estimates
coef_results <- c()
sig_results <- c()
for (i in 1:500) {
# have to re-create the data every time or it will just be the same data
df <- tibble(D = runif(1000, 0, 1),
Y = 0.6*D + rnorm(1000, mean = 0, sd = 2))
# Run the analysis
model <- feols(Y ~ D, df, se = 'hetero')
# Get the results
coef_results[i] <- coef(model)[2]
sig_results[i] <- tidy(model)$p.value[2] <= .05
}
mean(sig_results)
set.seed(777)
# create vectors to store your estimates
coef_results <- c()
sig_results <- c()
for (i in 1:500) {
# have to re-create the data every time or it will just be the same data
df <- tibble(D = runif(1000, 0, 1),
Y = 0.5*D + rnorm(1000, mean = 0, sd = 2))
# Run the analysis
model <- feols(Y ~ D, df, se = 'hetero')
# Get the results
coef_results[i] <- coef(model)[2]
sig_results[i] <- tidy(model)$p.value[2] <= .05
}
for (i in 1:500) {
# have to re-create the data every time or it will just be the same data
df <- tibble(D = runif(1000, 0, 1),
Y = 0.5*D + rnorm(1000, mean = 0, sd = 2))
# Run the analysis
model <- feols(Y ~ D, df, se = 'hetero')
# Get the results
coef_results[i] <- coef(model)[2]
sig_results[i] <- tidy(model)$p.value[2] <= .05
}
# Get the results
coef_results[i] <- coef(model)[2]
sig_results[i] <- tidy(model)$p.value[2] <= .05
}
mean(sig_results)
results_tibble <- tibble(coef = coef_results, sig = sig_results)
ggplot(results_tibble, aes(x = coef)) +
geom_density() +
theme_minimal() +
labs(x = 'Coefficient', y = 'Density')
ggplot(results_tibble, aes(x = sig)) +
geom_bar() +
theme_minimal() +
labs(x = 'Coefficient', y = 'Count') +
scale_x_discrete(labels = c('Insignificant','Significant'))
my_power_function <- function(effect, sample_size) {
sig_results <- c()
for (i in 1:500) {
# Have to re-create the data EVERY TIME or it will just be the same data
df <- tibble(D = runif(sample_size, 0, 1),
Y = effect*D + rnorm(sample_size, mean = 0, sd = 3))
# Run the analysis
model <- feols(Y ~ D, data = df, se = 'hetero')
# Get the results
sig_results[i] <- tidy(model)$p.value[2] <= .05
}
sig_results %>%
mean() %>%
return()
}
my_power_function(.5, 1000)
set.seed(777)
# create vectors to store your estimates
coef_results <- c()
sig_results <- c()
for (i in 1:500) {
# have to re-create the data every time or it will just be the same data
df <- tibble(D = runif(1000, 0, 1),
Y = 0.6*D + rnorm(1000, mean = 0, sd = 2))
# Run the analysis
model <- feols(Y ~ D, df, se = 'hetero')
# Get the results
coef_results[i] <- coef(model)[2]
sig_results[i] <- tidy(model)$p.value[2] <= .05
}
mean(sig_results)
set.seed(777)
# create vectors to store your estimates
coef_results <- c()
sig_results <- c()
for (i in 1:500) {
# have to re-create the data every time or it will just be the same data
df <- tibble(D = runif(1000, 0, 1),
Y = 0.9*D + rnorm(1000, mean = 0, sd = 3))
# Run the analysis
model <- feols(Y ~ D, df, se = 'hetero')
# Get the results
coef_results[i] <- coef(model)[2]
sig_results[i] <- tidy(model)$p.value[2] <= .05
}
mean(sig_results)
mean(sig_results)
set.seed(777)
# create vectors to store your estimates
coef_results <- c()
sig_results <- c()
for (i in 1:500) {
# have to re-create the data every time or it will just be the same data
df <- tibble(D = runif(1000, 0, 1),
Y = 0.9*D + rnorm(1000, mean = 0, sd = 3))
# Run the analysis
model <- feols(Y ~ D, df, se = 'hetero')
# Get the results
coef_results[i] <- coef(model)[2]
sig_results[i] <- tidy(model)$p.value[2] <= .05
}
mean(sig_results)
set.seed(777)
# create vectors to store your estimates
coef_results <- c()
sig_results <- c()
for (i in 1:500) {
# have to re-create the data every time or it will just be the same data
df <- tibble(D = runif(1000, 0, 1),
Y = 0.8*D + rnorm(1000, mean = 0, sd = 3))
# Run the analysis
model <- feols(Y ~ D, df, se = 'hetero')
# Get the results
coef_results[i] <- coef(model)[2]
sig_results[i] <- tidy(model)$p.value[2] <= .05
}
mean(sig_results)
results_tibble <- tibble(coef = coef_results, sig = sig_results)
ggplot(results_tibble, aes(x = coef)) +
geom_density() +
theme_minimal() +
labs(x = 'Coefficient', y = 'Density')
ggplot(results_tibble, aes(x = sig)) +
geom_bar() +
theme_minimal() +
labs(x = 'Coefficient', y = 'Count') +
scale_x_discrete(labels = c('Insignificant','Significant'))
my_power_function <- function(effect, sample_size) {
sig_results <- c()
for (i in 1:500) {
# Have to re-create the data EVERY TIME or it will just be the same data
df <- tibble(D = runif(sample_size, 0, 1),
Y = effect*D + rnorm(sample_size, mean = 0, sd = 3))
# Run the analysis
model <- feols(Y ~ D, data = df, se = 'hetero')
# Get the results
sig_results[i] <- tidy(model)$p.value[2] <= .05
}
sig_results %>%
mean() %>%
return()
}
my_power_function <- function(effect, sample_size) {
sig_results <- c()
for (i in 1:500) {
# Have to re-create the data EVERY TIME or it will just be the same data
df <- tibble(D = runif(sample_size, 0, 1),
Y = effect*D + rnorm(sample_size, mean = 0, sd = 3))
# Run the analysis
model <- feols(Y ~ D, data = df, se = 'hetero')
# Get the results
sig_results[i] <- tidy(model)$p.value[2] <= .05
}
sig_results %>%
mean() %>%
return()
}
my_power_function(.8, 1000)
set.seed(777)
# create vectors to store your estimates
coef_results <- c()
sig_results <- c()
for (i in 1:500) {
# have to re-create the data every time or it will just be the same data
df <- tibble(D = runif(1000, 0, 1),
Y = 0.9*D + rnorm(1000, mean = 0, sd = 3))
# Run the analysis
model <- feols(Y ~ D, df, se = 'hetero')
# Get the results
coef_results[i] <- coef(model)[2]
sig_results[i] <- tidy(model)$p.value[2] <= .05
}
mean(sig_results)
results_tibble <- tibble(coef = coef_results, sig = sig_results)
ggplot(results_tibble, aes(x = coef)) +
geom_density() +
theme_minimal() +
labs(x = 'Coefficient', y = 'Density')
ggplot(results_tibble, aes(x = sig)) +
geom_bar() +
theme_minimal() +
labs(x = 'Coefficient', y = 'Count') +
scale_x_discrete(labels = c('Insignificant','Significant'))
my_power_function <- function(effect, sample_size) {
sig_results <- c()
for (i in 1:500) {
# Have to re-create the data EVERY TIME or it will just be the same data
df <- tibble(D = runif(sample_size, 0, 1),
Y = effect*D + rnorm(sample_size, mean = 0, sd = 3))
# Run the analysis
model <- feols(Y ~ D, data = df, se = 'hetero')
# Get the results
sig_results[i] <- tidy(model)$p.value[2] <= .05
}
sig_results %>%
mean() %>%
return()
}
my_power_function(.9, 1000)
power_levels <- c()
effects_to_try <- c(.4, .8, 1.2, 1.6, 2)
for (i in 1:5) {
power_levels[i] <- my_power_function(effects_to_try[i], 1000)
}
for (i in 1:5) {
power_levels[i] <- my_power_function(effects_to_try[i], 1000)
}
power_results <- tibble(effect = effects_to_try,
power = power_levels)
power_results # Where do we cross 80%?
power_levels <- c()
effects_to_try <- c(0.3, 0.6, 0.9, 1.2, 1.5)
for (i in 1:5) {
power_levels[i] <- my_power_function(effects_to_try[i], 1000)
}
for (i in 1:5) {
power_levels[i] <- my_power_function(effects_to_try[i], 1000)
}
power_results <- tibble(effect = effects_to_try,
power = power_levels)
power_results # Where do we cross 80%?
ggplot(power_results,
aes(x = effect, y = power)) +
geom_line(color = 'red', size = 1.5) +
# add a horizontal line at 80%
geom_hline(aes(yintercept = .8), linetype = 'dashed') +
theme_minimal() +
scale_y_continuous(labels = scales::percent) +
labs(x = 'Linear Effect Size', y = 'Power')
pagedown::chrome_print("tutorial3.html",output="tutorial3.pdf")
pagedown::chrome_print("tutorial1.html",output="tutorial1.pdf")
pagedown::chrome_print("tutorial1.html",output="tutorial1.pdf")
pagedown::chrome_print("tutorial1.html",output="tutorial1.pdf")
pagedown::chrome_print("tutorial1.html",output="tutorial1.pdf")
