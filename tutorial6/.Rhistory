c(m1[["coef"]][[1]], m2[["coef"]][[1]], m3[["coef"]][[1]])
rdplot(df$Y, df$X, c = 0.5)
set.seed(77)
df <- tibble(X = runif(1000),
Treated = ifelse(X > 0.5, 1, 0),
XC = X - 0.5,
Y = 0.7*Treated + XC + rnorm(1000, 0, 0.3))
set.seed(7)
df <- tibble(X = runif(1000),
Treated = ifelse(X > 0.5, 1, 0),
XC = X - 0.5,
Y = 0.7*Treated + XC + rnorm(1000, 0, 0.3))
# The true effect is 0.7
m <- lm(Y ~ Treated + XC, df)
msummary(m, stars = TRUE, gof_omit = '^(?!Num)')
set.seed(7)
df <- tibble(X = runif(1000),
Treated = ifelse(X > 0.5, 1, 0),
XC = X - 0.5,
Y = 0.7*Treated + XC + 0.5*Treated*XC + rnorm(1000, 0, 0.3))
# The true RDD effect is 0.7, and the true RKD effect is 0.5
m <- lm(Y ~ Treated*XC, df)
msummary(m, stars = TRUE, gof_omit = '^(?!Num)')
ggplot(df, aes(x = XC, y = Y, group = Treated)) +
geom_point() +
geom_smooth(method = 'lm', color = 'red', se = FALSE, size = 1.5) +
geom_vline(aes(xintercept = 0), linetype = 'dashed') +
theme_metro() +
geom_segment(aes(x = 0, xend = 0, y = 0, yend = .73), color = 'blue', size = 2) +
labs(x = 'Running Variable Centered on Cutoff',
y = 'Outcome') +
annotate(geom = 'label', x = 0, y = .73, label = 'RDD Effect',color = 'blue', size = 16/.pt, hjust = 1.05)
ggplot(df, aes(x = XC, y = Y, group = Treated)) +
geom_point() +
geom_smooth(method = 'lm', color = 'red', se = FALSE, size = 1.5) +
geom_vline(aes(xintercept = 0), linetype = 'dashed') +
theme_metro() +
geom_segment(aes(x = 0, xend = 0, y = 0, yend = .73), color = 'blue', size = 2) +
labs(x = 'Running Variable Centered on Cutoff',
y = 'Outcome') +
annotate(geom = 'label', x = 0, y = .70, label = 'RDD Effect',color = 'blue', size = 16/.pt, hjust = 1.05)
ggplot(df, aes(x = XC, y = Y, group = Treated)) +
geom_point() +
geom_smooth(method = 'lm', color = 'red', se = FALSE, size = 1.5) +
geom_vline(aes(xintercept = 0), linetype = 'dashed') +
theme_metro() +
geom_segment(aes(x = 0, xend = 0, y = 0, yend = .73), color = 'blue', size = 2) +
labs(x = 'Running Variable Centered on Cutoff',
y = 'Outcome') +
annotate(geom = 'label', x = -0.1, y = .70, label = 'RDD Effect',color = 'blue', size = 16/.pt, hjust = 1.05)
ggplot(df, aes(x = XC, y = Y, group = Treated)) +
geom_point() +
geom_smooth(method = 'lm', color = 'red', se = FALSE, size = 1.5) +
geom_vline(aes(xintercept = 0), linetype = 'dashed') +
theme_metro() +
geom_segment(aes(x = 0, xend = 0, y = 0, yend = .73), color = 'blue', size = 2) +
labs(x = 'Running Variable Centered on Cutoff',
y = 'Outcome') +
annotate(geom = 'label', x = -1, y = .70, label = 'RDD Effect',color = 'blue', size = 16/.pt, hjust = 1.05)
ggplot(df, aes(x = XC, y = Y, group = Treated)) +
geom_point() +
geom_smooth(method = 'lm', color = 'red', se = FALSE, size = 1.5) +
geom_vline(aes(xintercept = 0), linetype = 'dashed') +
theme_metro() +
geom_segment(aes(x = 0, xend = 0, y = 0, yend = .73), color = 'blue', size = 2) +
labs(x = 'Running Variable Centered on Cutoff',
y = 'Outcome') +
annotate(geom = 'label', x = 0, y = .1, label = 'RDD Effect',color = 'blue', size = 16/.pt, hjust = 1.05)
ggplot(df, aes(x = XC, y = Y, group = Treated)) +
geom_point() +
geom_smooth(method = 'lm', color = 'red', se = FALSE, size = 1.5) +
geom_vline(aes(xintercept = 0), linetype = 'dashed') +
theme_metro() +
geom_segment(aes(x = 0, xend = 0, y = 0, yend = .73), color = 'blue', size = 2) +
labs(x = 'Running Variable Centered on Cutoff',
y = 'Outcome') +
annotate(geom = 'label', x = 0, y = .73, label = 'RDD Effect',color = 'blue', size = 16/.pt, hjust = 1.05)
ggplot(df, aes(x = XC, y = Y, group = Treated)) +
geom_point() +
geom_smooth(method = 'lm', color = 'red', se = FALSE, size = 1.5) +
geom_vline(aes(xintercept = 0), linetype = 'dashed') +
theme_metro() +
geom_segment(aes(x = 0, xend = 0, y = 0, yend = .73), color = 'blue', size = 2) +
labs(x = 'Running Variable Centered on Cutoff',
y = 'Outcome') +
annotate(geom = 'label', x = 0, y = .73, label = 'RDD Effect',color = 'blue', size = 16/.pt, hjust = 1.0)
ggplot(df, aes(x = XC, y = Y, group = Treated)) +
geom_point() +
geom_smooth(method = 'lm', color = 'red', se = FALSE, size = 1.5) +
geom_vline(aes(xintercept = 0), linetype = 'dashed') +
theme_metro() +
geom_segment(aes(x = 0, xend = 0, y = 0, yend = .73), color = 'blue', size = 2) +
labs(x = 'Running Variable Centered on Cutoff',
y = 'Outcome') +
annotate(geom = 'label', x = 0, y = .73, label = 'RDD Effect',color = 'blue', size = 16/.pt, hjust = 2)
ggplot(df, aes(x = XC, y = Y, group = Treated)) +
geom_point() +
geom_smooth(method = 'lm', color = 'red', se = FALSE, size = 1.5) +
geom_vline(aes(xintercept = 0), linetype = 'dashed') +
theme_metro() +
geom_segment(aes(x = 0, xend = 0, y = 0, yend = .73), color = 'blue', size = 2) +
labs(x = 'Running Variable Centered on Cutoff',
y = 'Outcome') +
annotate(geom = 'label', x = 0, y = 2.73, label = 'RDD Effect', color = 'blue', size = 16/.pt, hjust = 1.05)
ggplot(df, aes(x = XC, y = Y, group = Treated)) +
geom_point() +
geom_smooth(method = 'lm', color = 'red', se = FALSE, size = 1.5) +
geom_vline(aes(xintercept = 0), linetype = 'dashed') +
theme_metro() +
geom_segment(aes(x = 0, xend = 0, y = 0, yend = .73), color = 'blue', size = 2) +
labs(x = 'Running Variable Centered on Cutoff',
y = 'Outcome') +
annotate(geom = 'label', x = 0, y = .73, label = 'RDD Effect', color = 'blue', size = 16/.pt, hjust = 1.05)
ggplot(df, aes(x = XC, y = Y, group = Treated)) +
geom_point() +
geom_smooth(method = 'lm', color = 'red', se = FALSE, size = 1.5) +
geom_vline(aes(xintercept = -1), linetype = 'dashed') +
theme_metro() +
geom_segment(aes(x = 0, xend = 0, y = 0, yend = .73), color = 'blue', size = 2) +
labs(x = 'Running Variable Centered on Cutoff',
y = 'Outcome') +
annotate(geom = 'label', x = 0, y = .73, label = 'RDD Effect', color = 'blue', size = 16/.pt, hjust = 1.05)
ggplot(df, aes(x = XC, y = Y, group = Treated)) +
geom_point() +
geom_smooth(method = 'lm', color = 'red', se = FALSE, size = 1.5) +
geom_vline(aes(xintercept = 0), linetype = 'dashed') +
theme_metro() +
geom_segment(aes(x = 0, xend = 0, y = -1, yend = .73), color = 'blue', size = 2) +
labs(x = 'Running Variable Centered on Cutoff',
y = 'Outcome') +
annotate(geom = 'label', x = 0, y = .73, label = 'RDD Effect', color = 'blue', size = 16/.pt, hjust = 1.05)
ggplot(df, aes(x = XC, y = Y, group = Treated)) +
geom_point() +
geom_smooth(method = 'lm', color = 'red', se = FALSE, size = 1.5) +
geom_vline(aes(xintercept = 0), linetype = 'dashed') +
theme_metro() +
geom_segment(aes(x = 0, xend = 0, y = -0.1, yend = .73), color = 'blue', size = 2) +
labs(x = 'Running Variable Centered on Cutoff',
y = 'Outcome') +
annotate(geom = 'label', x = 0, y = .73, label = 'RDD Effect', color = 'blue', size = 16/.pt, hjust = 1.05)
ggplot(df, aes(x = XC, y = Y, group = Treated)) +
geom_point() +
geom_smooth(method = 'lm', color = 'red', se = FALSE, size = 1.5) +
geom_vline(aes(xintercept = 0), linetype = 'dashed') +
theme_metro() +
geom_segment(aes(x = 0, xend = 0, y = -0.05, yend = .73), color = 'blue', size = 2) +
labs(x = 'Running Variable Centered on Cutoff',
y = 'Outcome') +
annotate(geom = 'label', x = 0, y = .73, label = 'RDD Effect', color = 'blue', size = 16/.pt, hjust = 1.05)
ggplot(df, aes(x = XC, y = Y, group = Treated)) +
geom_point() +
geom_smooth(method = 'lm', color = 'red', se = FALSE, size = 1.5) +
geom_vline(aes(xintercept = 0), linetype = 'dashed') +
theme_metro() +
geom_segment(aes(x = 0, xend = 0, y = -0.05, yend = .7), color = 'blue', size = 2) +
labs(x = 'Running Variable Centered on Cutoff',
y = 'Outcome') +
annotate(geom = 'label', x = 0, y = .73, label = 'RDD Effect', color = 'blue', size = 16/.pt, hjust = 1.05)
ggplot(df, aes(x = XC, y = Y, group = Treated)) +
geom_point() +
geom_smooth(method = 'lm', color = 'red', se = FALSE, size = 1.5) +
geom_vline(aes(xintercept = 0), linetype = 'dashed') +
theme_metro() +
geom_segment(aes(x = 0, xend = 0, y = -.05, yend = .7), color = 'blue', size = 2) +
labs(x = 'Running Variable Centered on Cutoff',
y = 'Outcome') +
annotate(geom = 'label', x = 0, y = .73, label = 'RDD Effect', color = 'blue', size = 16/.pt, hjust = 1.05)
# The true effect is 0.7
m1 <- lm(Y ~ Treated*XC, df)
m2 <- lm(Y ~ Treated*XC, df %>% filter(abs(XC) < 0.25))
m3 <- lm(Y ~ Treated*XC, df %>% filter(abs(XC) < 0.1))
m4 <- lm(Y ~ Treated*XC, df %>% filter(abs(XC) < 0.05))
m5 <- lm(Y ~ Treated*XC, df %>% filter(abs(XC) < 0.01))
msummary(list(m1, m2, m3, m4, m5), stars = TRUE, gof_omit = '^(?!Num)', coef_omit = "Int|XC")
set.seed(7)
df <- tibble(X = runif(500),
Treated = ifelse(X > 0.5, 1, 0),
XC = X - 0.5,
Y = 0.7*Treated + XC + 0.5*Treated*XC + rnorm(500, 0, 0.3))
# The true RDD effect is 0.7, and the true RKD effect is 0.5
m <- lm(Y ~ Treated*XC, df)
msummary(m, stars = TRUE, gof_omit = '^(?!Num)')
ggplot(df, aes(x = XC, y = Y, group = Treated)) +
geom_point() +
geom_smooth(method = 'lm', color = 'red', se = FALSE, size = 1.5) +
geom_vline(aes(xintercept = 0), linetype = 'dashed') +
theme_metro() +
geom_segment(aes(x = 0, xend = 0, y = -.05, yend = .7), color = 'blue', size = 2) +
labs(x = 'Running Variable Centered on Cutoff',
y = 'Outcome') +
annotate(geom = 'label', x = 0, y = .73, label = 'RDD Effect', color = 'blue', size = 16/.pt, hjust = 1.05)
ggplot(df, aes(x = XC, y = Y, group = Treated)) +
geom_point() +
geom_smooth(method = 'lm', color = 'red', se = FALSE, size = 1.5) +
geom_vline(aes(xintercept = 0), linetype = 'dashed') +
theme_metro() +
geom_segment(aes(x = 0, xend = 0, y = 0, yend = .73), color = 'blue', size = 2) +
labs(x = 'Running Variable Centered on Cutoff',
y = 'Outcome') +
annotate(geom = 'label', x = 0, y = .73, label = 'RDD Effect', color = 'blue', size = 16/.pt, hjust = 1.05)
ggplot(df, aes(x = XC, y = Y, group = Treated)) +
geom_point() +
geom_smooth(method = 'lm', color = 'red', se = FALSE, size = 1.5) +
geom_vline(aes(xintercept = 0), linetype = 'dashed') +
theme_metro() +
geom_segment(aes(x = 0, xend = 0, y = -.2, yend = .7), color = 'blue', size = 2) +
labs(x = 'Running Variable Centered on Cutoff',
y = 'Outcome') +
annotate(geom = 'label', x = 0, y = .73, label = 'RDD Effect', color = 'blue', size = 16/.pt, hjust = 1.05)
ggplot(df, aes(x = XC, y = Y, group = Treated)) +
geom_point() +
geom_smooth(method = 'lm', color = 'red', se = FALSE, size = 1.5) +
geom_vline(aes(xintercept = 0), linetype = 'dashed') +
theme_metro() +
geom_segment(aes(x = 0, xend = 0, y = -.02, yend = .7), color = 'blue', size = 2) +
labs(x = 'Running Variable Centered on Cutoff',
y = 'Outcome') +
annotate(geom = 'label', x = 0, y = .73, label = 'RDD Effect', color = 'blue', size = 16/.pt, hjust = 1.05)
ggplot(df, aes(x = XC, y = Y, group = Treated)) +
geom_point() +
geom_smooth(method = 'lm', color = 'red', se = FALSE, size = 1.5) +
geom_vline(aes(xintercept = 0), linetype = 'dashed') +
theme_metro() +
geom_segment(aes(x = 0, xend = 0, y = -.02, yend = .74), color = 'blue', size = 2) +
labs(x = 'Running Variable Centered on Cutoff',
y = 'Outcome') +
annotate(geom = 'label', x = 0, y = .73, label = 'RDD Effect', color = 'blue', size = 16/.pt, hjust = 1.05)
ggplot(df, aes(x = XC, y = Y, group = Treated)) +
geom_point() +
geom_smooth(method = 'lm', color = 'red', se = FALSE, size = 1.5) +
geom_vline(aes(xintercept = 0), linetype = 'dashed') +
theme_metro() +
geom_segment(aes(x = 0, xend = 0, y = -.02, yend = .73), color = 'blue', size = 2) +
labs(x = 'Running Variable Centered on Cutoff',
y = 'Outcome') +
annotate(geom = 'label', x = 0, y = .73, label = 'RDD Effect', color = 'blue', size = 16/.pt, hjust = 1.05)
ggplot(df, aes(x = XC, y = Y, group = Treated)) +
geom_point() +
geom_smooth(method = 'lm', color = 'red', se = FALSE, size = 1.5) +
geom_vline(aes(xintercept = 0), linetype = 'dashed') +
theme_metro() +
geom_segment(aes(x = 0, xend = 0, y = -.03, yend = .73), color = 'blue', size = 2) +
labs(x = 'Running Variable Centered on Cutoff',
y = 'Outcome') +
annotate(geom = 'label', x = 0, y = .73, label = 'RDD Effect', color = 'blue', size = 16/.pt, hjust = 1.05)
# The true effect is 0.7
m1 <- lm(Y ~ Treated*XC, df)
m2 <- lm(Y ~ Treated*XC, df %>% filter(abs(XC) < 0.25))
m3 <- lm(Y ~ Treated*XC, df %>% filter(abs(XC) < 0.1))
m4 <- lm(Y ~ Treated*XC, df %>% filter(abs(XC) < 0.05))
m5 <- lm(Y ~ Treated*XC, df %>% filter(abs(XC) < 0.01))
msummary(list(m1, m2, m3, m4, m5), stars = TRUE, gof_omit = '^(?!Num)', coef_omit = "Int|XC")
set.seed(7)
df <- tibble(X = runif(500),
Treated = ifelse(X > 0.5, 1, 0),
XC = X - 0.5,
Y = 0.7*Treated + XC + 0.6*XC^2 + rnorm(500, 0, 0.3))
# The true effect is 0.7, and the true model is an order-2 polynomial
m <- lm(Y ~ Treated, df)
jump <- coef(m)[2]
ggplot(df, aes(x = XC, y = Y, group = Treated)) + geom_point() +
#geom_smooth(method = 'lm', se = FALSE) +
geom_line(aes(y = df %>% group_by(Treated) %>% mutate(YM=mean(Y)) %>% pull(YM)),
color = 'blue') +
theme_pubr() +
labs(x = 'Running Variable Centered on Cutoff',
y = 'Outcome',
title = paste0('Simple Above/Below Average. Jump: ', scales::number(jump, accuracy = .001)))
# The true effect is 0.7, and the true model is an order-2 polynomial
m <- lm(Y ~ Treated*XC, df)
jump <- coef(m)[2]
ggplot(df, aes(x = XC, y = Y, group = Treated)) + geom_point() +
geom_smooth(method = 'lm', se = FALSE) +
theme_pubr() +
labs(x = 'Running Variable Centered on Cutoff',
y = 'Outcome',
title = paste0('Linear RDD. Jump: ', scales::number(jump, accuracy = .001)))
# The true effect is 0.7, and the true model is an order-2 polynomial
m <- lm(Y ~ Treated*XC + Treated*I(XC^2), df)
jump <- coef(m)[2]
ggplot(df, aes(x = XC, y = Y, group = Treated)) + geom_point() +
geom_smooth(method = 'lm', se = FALSE, formula = y ~ x + I(x^2)) +
theme_pubr() +
labs(x = 'Running Variable Centered on Cutoff',
y = 'Outcome',
title = paste0('Order-2 Polynomial RDD. Jump: ', scales::number(jump, accuracy = .001)))
```{r, echo = TRUE}
# The true effect is 0.7, and the true model is an order-2 polynomial
m <- lm(Y ~ Treated*XC + Treated*I(XC^2) + Treated*I(XC^3), df)
jump <- coef(m)[2]
ggplot(df, aes(x = XC, y = Y, group = Treated)) + geom_point() +
geom_smooth(method = 'lm', se = FALSE, formula = y ~ x + I(x^2) + I(x^3)) +
theme_pubr() +
labs(x = 'Running Variable Centered on Cutoff',
y = 'Outcome',
title = paste0('Order-3 Polynomial RDD. Jump: ', scales::number(jump, accuracy = .001)))
m <- lm(Y ~ Treated*XC + Treated*I(XC^2) + Treated*I(XC^3) + Treated*I(XC^4) +
Treated*I(XC^5) + Treated*I(XC^6) + Treated*I(XC^7) + Treated*I(XC^8), df)
jump <- coef(m)[2]
ggplot(df, aes(x = XC, y = Y, group = Treated)) + geom_point() +
geom_smooth(method = 'lm', se = FALSE, formula = y ~ poly(x,8)) +
theme_pubr() +
labs(x = 'Running Variable Centered on Cutoff',
y = 'Outcome',
title = paste0('Order-8 Polynomial RDD. Jump: ', scales::number(jump, accuracy = .001)))
df <- df %>%
arrange(XC)
m1 <- loess(Y ~ XC, df %>% filter(Treated == 0))
m2 <- loess(Y ~ XC, df %>% filter(Treated == 1))
jump <- predict(m2)[1] - utils::tail(predict(m1),1)
ggplot(df, aes(x = XC, y = Y, group = Treated)) + geom_point() +
geom_smooth(method = 'loess', se = FALSE) +
theme_pubr() +
labs(x = 'Running Variable Centered on Cutoff',
y = 'Outcome',
title = paste0('Local Linear Regression RDD. Jump: ', scales::number(jump, accuracy = .001)))
df_bin_count <- df %>%
# Select breaks so that one of the breakpoints is the cutoff
mutate(X_bins = cut(X, breaks = 0:10/10)) %>%
group_by(X_bins) %>%
count()
bad_bins <- df_bin_count
bad_bins$n <- sample(df_bin_count$n, 10)
bad_bins$n[5] <- 20
bad_bins$n[6] <- 100
bad_bins$Type <- 'Bad'
df_bin_count %>%
mutate(Type = 'Good') %>%
bind_rows(bad_bins) %>%
mutate(Type = factor(Type, levels = c('Good','Bad'))) %>%
group_by(Type) %>%
mutate(n = n/sum(n)) %>%
ggplot(aes(x = X_bins, y = n, fill = Type)) +
guides(fill = FALSE) +
geom_col() +
theme_metro() +
theme(axis.text.x = element_text(angle = 90)) +
labs(y = '%', x = "X") +
geom_vline(aes(xintercept = 5.5), linetype = 'dashed') +
scale_y_continuous(labels = scales::percent, limits = c(0,.2)) +
facet_wrap('Type')
library(rddensity)
test_density <- rddensity(df$X, c = 0.5)
summary(test_density)
plot_density_test <- rdplotdensity(rdd = test_density, X = df$X)
set.seed(7)
df_fuzzy <- tibble(X = runif(500),
above_cut = ifelse(X > 0.5, 1, 0),
XC = X - 0.5,
treatassign = 0.5*XC + 0.5*above_cut,
random = runif(500),
Treated = ifelse(treatassign > random, 1, 0),
Y = 0.7*Treated + XC + rnorm(500, 0, 0.3))
df_fuzzy <- df_fuzzy %>%
mutate(Runbin = cut(X, 0:10/10)) %>%
group_by(Runbin) %>%
mutate(av_treat = mean(treatassign),
av_out = mean(Y))
ggplot(df_fuzzy, aes(x = X, y = treatassign)) +
geom_point() +
geom_point(data = df_fuzzy %>% group_by(Runbin) %>% slice(1), aes(x = X, y = av_treat),
color = 'red', size = 2) +
geom_smooth(aes(group = X > .5), method = 'lm', color = 'blue', se = FALSE) +
geom_vline(aes(xintercept = .5), linetype = 'dashed') +
ggpubr::theme_pubr() +
labs(x = 'Running Variable', y = 'Treated')
# The true effect is 0.7
without_fuzzy <- lm(Y ~ above_cut*XC, df_fuzzy)
predict_treat <- lm(Treated ~ above_cut*XC, df_fuzzy)
fuzzy_rdd <- feols(Y ~ 1 | Treated*XC ~ above_cut*XC, df_fuzzy)
msummary(list(without_fuzzy, predict_treat, fuzzy_rdd), stars = TRUE, gof_omit = '^(?!Num)', coef_omit = "Int|XC")
set.seed(77)
df_fuzzy <- tibble(X = runif(500),
above_cut = ifelse(X > 0.5, 1, 0),
XC = X - 0.5,
treatassign = 0.5*XC + 0.5*above_cut,
random = runif(500),
Treated = ifelse(treatassign > random, 1, 0),
Y = 0.7*Treated + XC + rnorm(500, 0, 0.3))
# The true effect is 0.7
without_fuzzy <- lm(Y ~ above_cut*XC, df_fuzzy)
predict_treat <- lm(Treated ~ above_cut*XC, df_fuzzy)
fuzzy_rdd <- feols(Y ~ 1 | Treated*XC ~ above_cut*XC, df_fuzzy)
msummary(list(without_fuzzy, predict_treat, fuzzy_rdd), stars = TRUE, gof_omit = '^(?!Num)', coef_omit = "Int|XC")
# The true effect is 0.7
library(rdrobust)
m <- rdrobust(df$Y, df$X, c = 0.5)
summary(m)
# The true effect is 0.7
library(rdrobust)
m1 <- rdrobust(df$Y, df$X, c = 0.5, h = 0.128)
# The true effect is 0.7
library(rdrobust)
m1 <- rdrobust(df$Y, df$X, c = 0.5, h = 0.212)
m2 <- rdrobust(df$Y, df$X, c = 0.5, h = 2*0.212)
m3 <- rdrobust(df$Y, df$X, c = 0.5, h = 0.5*0.212)
c(m1[["coef"]][[1]], m2[["coef"]][[1]], m3[["coef"]][[1]])
rdplot(df$Y, df$X, c = 0.5)
set.seed(7)
df <- tibble(X = runif(1000),
Treated = ifelse(X > 0.5, 1, 0),
XC = X - 0.5,
Y = 0.7*Treated + XC + rnorm(1000, 0, 0.3))
View(df)
set.seed(7)
df <- tibble(X = runif(500),
Treated = ifelse(X > 0.5, 1, 0),
XC = X - 0.5,
Y = 0.7*Treated + XC + rnorm(500, 0, 0.3))
# The true effect is 0.7
m <- lm(Y ~ Treated + XC, df)
msummary(m, stars = TRUE, gof_omit = '^(?!Num)')
View(df)
df %>%
arrange(X) %>%
slice(c(256:259)) %>%
knitr::kable()
# The true effect is 0.7
m <- lm(Y ~ Treated + XC, df)
msummary(m, stars = TRUE, gof_omit = '^(?!Num)')
set.seed(7)
df <- tibble(X = runif(500),
Treated = ifelse(X > 0.5, 1, 0),
XC = X - 0.5,
Y = 0.7*Treated + XC + 0.5*Treated*XC + rnorm(500, 0, 0.3))
df %>%
arrange(X) %>%
slice(c(256:259)) %>%
knitr::kable()
# The true RDD effect is 0.7, and the true RKD effect is 0.5
m <- lm(Y ~ Treated*XC, df)
msummary(m, stars = TRUE, gof_omit = '^(?!Num)')
ggplot(df, aes(x = XC, y = Y, group = Treated)) +
geom_point() +
geom_smooth(method = 'lm', color = 'red', se = FALSE, size = 1.5) +
geom_vline(aes(xintercept = 0), linetype = 'dashed') +
theme_metro() +
geom_segment(aes(x = 0, xend = 0, y = -.03, yend = .73), color = 'blue', size = 2) +
labs(x = 'Running Variable Centered on Cutoff',
y = 'Outcome') +
annotate(geom = 'label', x = 0, y = .73, label = 'RDD Effect', color = 'blue', size = 16/.pt, hjust = 1.05)
# The true effect is 0.7
m1 <- lm(Y ~ Treated*XC, df)
m2 <- lm(Y ~ Treated*XC, df %>% filter(abs(XC) < 0.25))
m3 <- lm(Y ~ Treated*XC, df %>% filter(abs(XC) < 0.1))
m4 <- lm(Y ~ Treated*XC, df %>% filter(abs(XC) < 0.05))
m5 <- lm(Y ~ Treated*XC, df %>% filter(abs(XC) < 0.01))
# The true effect is 0.7
m1 <- lm(Y ~ Treated*XC, df)
m2 <- lm(Y ~ Treated*XC, df %>% filter(abs(XC) < 0.25))
m3 <- lm(Y ~ Treated*XC, df %>% filter(abs(XC) < 0.1))
m4 <- lm(Y ~ Treated*XC, df %>% filter(abs(XC) < 0.05))
m5 <- lm(Y ~ Treated*XC, df %>% filter(abs(XC) < 0.01))
msummary(list(m1, m2, m3, m4, m5), stars = TRUE, gof_omit = '^(?!Num)', coef_omit = "Int|XC")
set.seed(7)
df <- tibble(X = runif(500),
Treated = ifelse(X > 0.5, 1, 0),
XC = X - 0.5,
Y = 0.7*Treated + XC + 0.6*XC^2 + rnorm(500, 0, 0.3))
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, dpi = 200, fig.width = 8, fig.height = 4.5)
library(tidyverse)
library(dagitty)
library(ggdag)
library(gganimate)
library(ggpubr)
library(ggthemes)
library(Cairo)
library(rdrobust)
library(modelsummary)
library(purrr)
library(AER)
library(estimatr)
library(magick)
library(directlabels)
library(fixest)
library(jtools)
library(scales)
theme_set(theme_gray(base_size = 15))
theme_metro <- function(x) {
theme_classic() +
theme(panel.background = element_rect(color = '#FAFAFA',fill='#FAFAFA'),
plot.background = element_rect(color = '#FAFAFA',fill='#FAFAFA'),
text = element_text(size = 16),
axis.title.x = element_text(hjust = 1),
axis.title.y = element_text(hjust = 1, angle = 0))
}
theme_void_metro <- function(x) {
theme_void() +
theme(panel.background = element_rect(color = '#FAFAFA',fill='#FAFAFA'),
plot.background = element_rect(color = '#FAFAFA',fill='#FAFAFA'),
text = element_text(size = 16))
}
theme_metro_regtitle <- function(x) {
theme_classic() +
theme(panel.background = element_rect(color = '#FAFAFA',fill='#FAFAFA'),
plot.background = element_rect(color = '#FAFAFA',fill='#FAFAFA'),
text = element_text(size = 16))
}
set.seed(77)
df_fuzzy <- tibble(X = runif(500),
above_cut = ifelse(X > 0.5, 1, 0),
XC = X - 0.5,
treatassign = 0.5*XC + 0.5*above_cut,
random = runif(500),
Treated = ifelse(treatassign > random, 1, 0),
Y = 0.7*Treated + XC + rnorm(500, 0, 0.3))
View(df_fuzzy)
View(predict_treat)
pagedown::chrome_print("tutorial6.html", output="tutorial6.pdf")
pagedown::chrome_print("tutorial6.html", output="tutorial6.pdf")
pagedown::chrome_print("tutorial6.html", output="tutorial6.pdf")
